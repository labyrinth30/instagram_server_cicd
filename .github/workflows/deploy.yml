name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4 # Github Repository 파일 불러오기 위한 라이브러리

      - name: Install Node.js
        uses: actions/setup-node@v4 # Node.js 설치를 위한 라이브러리
        with:
          node-version: '20'

      - name: 의존성 설치
        run: npm ci

      - name: 환경 변수 설정
        run: |
          echo '${{ secrets.ENV }}' > .env

      - name: 테스트 코드 실행
        run: npm run test

      - name: Github Actions에서 Build
        run : npm run build

      - name: 압축하기
        run: tar -czvf project.tar.gz dist .env package.json package-lock.json

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.tar.gz
          target: /home/ubuntu/instagram_server_cicd/tobe

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3 # SSH로 EC2에 접속하기 위한 라이브러리
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          envs: ENV
          script_stop: true # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: |
            rm -rf /home/ubuntu/instagram_server_cicd/current
            mkdir /home/ubuntu/instagram_server_cicd/current
            mv /home/ubuntu/instagram_server_cicd/tobe/project.tar.gz /home/ubuntu/instagram-server/current/project.tar.gz
            cd /home/ubuntu/instagram_server_cicd/current
            tar -xvf project.tar.gz
            npm i
            pm2 kill
            pm2 start dist/main.js --name "backend-server"
